services:
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  web:
    build: .
    #command: gunicorn anno.wsgi -b :8530
    command: python manage.py runserver 0.0.0.0:8530
    volumes:
      - .:/code
      #- .${MEDIA_VOLUME}:/code${MEDIA_VOLUME}
      #- ./static:/code/static
    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - STATIC_ROOT=/code/static
    depends_on:
      - db
  
  nginx:
    #build: ./nginx
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    volumes:
      - ${NGINX_CONF}
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - nginx
    profiles:
      - prod
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db_data:
    driver: local
